[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 2 products, 2 sources, 8 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/br/unb/cic/flang/IfThenElseTest.scala, ${BASE}/src/test/scala/br/unb/cic/flang/InterpreterTest.scala, ${BASE}/src/test/scala/br/unb/cic/flang/SubstitutionTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/test/scala/br/unb/cic/flang/IfThenElseTest.scala, ${BASE}/src/test/scala/br/unb/cic/flang/SubstitutionTest.scala), removed = Set(${BASE}/src/test/scala/br/unb/cic/flang/Substitution.scala), changed = Set(${BASE}/src/test/scala/br/unb/cic/flang/InterpreterTest.scala), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(br.unb.cic.flang.App,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]))), NamesChange(br.unb.cic.flang.CInt$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]))), NamesChange(br.unb.cic.flang.Expr,ModifiedNames(changes = UsedName(Expr,[Default]))), NamesChange(br.unb.cic.flang.CInt,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]))), NamesChange(br.unb.cic.flang.MErr.package$,ModifiedNames(changes = UsedName(get,[Default]), UsedName(put,[Default]), UsedName(runState,[Default]), UsedName(bind,[Default]), UsedName(declareVar,[Default]), UsedName(lookupVar,[Default]), UsedName(pureMError,[Default]))), NamesChange(br.unb.cic.flang.App$,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]))), NamesChange(br.unb.cic.flang.Interpreter$,ModifiedNames(changes = UsedName(runEval,[Default]), UsedName(eval,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.App has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.App: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.App.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [apply, App][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.CInt$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.CInt$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.CInt$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [apply, CInt][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.SubstitutionTest: [apply, CInt][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.Expr has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Expr,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.Expr: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.Expr.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [Expr][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.SubstitutionTest: [Expr][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.CInt has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.CInt: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.CInt.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [apply, CInt][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.SubstitutionTest: [apply, CInt][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.MErr.package$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(get,[Default]), UsedName(put,[Default]), UsedName(runState,[Default]), UsedName(bind,[Default]), UsedName(declareVar,[Default]), UsedName(lookupVar,[Default]), UsedName(pureMError,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.MErr.package$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.MErr.package$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [runState][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.App$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.App$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.App$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [apply, App][0m
[0m[[0m[0mdebug[0m] [0m[0mThe br.unb.cic.flang.Interpreter$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(runEval,[Default]), UsedName(eval,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) br.unb.cic.flang.Interpreter$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) br.unb.cic.flang.Interpreter$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of br.unb.cic.flang.InterpreterTest: [runEval, eval][0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/test/scala/br/unb/cic/flang/Substitution.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/test/scala/br/unb/cic/flang/IfThenElseTest.scala, ${BASE}/src/test/scala/br/unb/cic/flang/SubstitutionTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/test/scala/br/unb/cic/flang/InterpreterTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(br.unb.cic.flang.App,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]))), NamesChange(br.unb.cic.flang.CInt$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]))), NamesChange(br.unb.cic.flang.Expr,ModifiedNames(changes = UsedName(Expr,[Default]))), NamesChange(br.unb.cic.flang.CInt,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(CInt,[Default]), UsedName(value,[Default]), UsedName(br;unb;cic;flang;CInt;init;,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(v,[Default]))), NamesChange(br.unb.cic.flang.MErr.package$,ModifiedNames(changes = UsedName(get,[Default]), UsedName(put,[Default]), UsedName(runState,[Default]), UsedName(bind,[Default]), UsedName(declareVar,[Default]), UsedName(lookupVar,[Default]), UsedName(pureMError,[Default]))), NamesChange(br.unb.cic.flang.App$,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElementNames,[Default]), UsedName(unapply,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$2,[Default]), UsedName(br;unb;cic;flang;App;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(arg,[Default]), UsedName(copy,[Default]), UsedName(App,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tupled,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(productElementName,[Default]))), NamesChange(br.unb.cic.flang.Interpreter$,ModifiedNames(changes = UsedName(runEval,[Default]), UsedName(eval,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(br.unb.cic.flang.SubstitutionTest, br.unb.cic.flang.InterpreterTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(br.unb.cic.flang.InterpreterTest, br.unb.cic.flang.SubstitutionTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mall 3 sources are invalidated[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: br.unb.cic.flang.SubstitutionTest, br.unb.cic.flang.InterpreterTest[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0 percent of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 3 Scala sources to C:\Users\jklui\Desktop\FLanguageG03\target\scala-2.13\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala2-sbt-bridge\2.13.14\scala2-sbt-bridge-2.13.14.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 5eaac2d2 for Scala compiler version 2.13.14[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\jklui\Desktop\FLanguageG03\target\scala-2.13\test-classes;C:\Users\jklui\Desktop\FLanguageG03\target\scala-2.13\classes;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.14\scala-library-2.13.14.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.13\3.2.19\scalactic_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.13\3.2.19\scalatest_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-core_2.13\2.12.0\cats-core_2.13-2.12.0.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.14\scala-reflect-2.13.14.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-core_2.13\3.2.19\scalatest-core_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-featurespec_2.13\3.2.19\scalatest-featurespec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-flatspec_2.13\3.2.19\scalatest-flatspec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-freespec_2.13\3.2.19\scalatest-freespec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funsuite_2.13\3.2.19\scalatest-funsuite_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funspec_2.13\3.2.19\scalatest-funspec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-propspec_2.13\3.2.19\scalatest-propspec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-refspec_2.13\3.2.19\scalatest-refspec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-wordspec_2.13\3.2.19\scalatest-wordspec_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-diagrams_2.13\3.2.19\scalatest-diagrams_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-matchers-core_2.13\3.2.19\scalatest-matchers-core_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-shouldmatchers_2.13\3.2.19\scalatest-shouldmatchers_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-mustmatchers_2.13\3.2.19\scalatest-mustmatchers_2.13-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-kernel_2.13\2.12.0\cats-kernel_2.13-2.12.0.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.2.19\scalatest-compatible-3.2.19.jar;C:\Users\jklui\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.13\2.1.0\scala-xml_2.13-2.1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.6844627 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
